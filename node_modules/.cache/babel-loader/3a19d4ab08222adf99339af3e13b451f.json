{"ast":null,"code":"var _jsxFileName = \"/Users/bruce/Desktop/papa-list/papa-takehome/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css'; //Include list of todo items\n\nconst toDoList = [{\n  id: 1,\n  group: \"Purchases\",\n  task: \"Go to the bank\",\n  dependencyIds: [],\n  completedAt: null\n}, {\n  id: 2,\n  group: \"Purchases\",\n  task: \"Buy hammer\",\n  dependencyIds: [1],\n  completedAt: null\n}, {\n  id: 3,\n  group: \"Purchases\",\n  task: \"Buy wood\",\n  dependencyIds: [1],\n  completedAt: null\n}, {\n  id: 4,\n  group: \"Purchases\",\n  task: \"Buy nails\",\n  dependencyIds: [1],\n  completedAt: null\n}, {\n  id: 5,\n  group: \"Purchases\",\n  task: \"Buy paint\",\n  dependencyIds: [1],\n  completedAt: null\n}, {\n  id: 6,\n  group: \"Build Airplane\",\n  task: \"Hammer nails into wood\",\n  dependencyIds: [2, 3, 4],\n  completedAt: null\n}, {\n  id: 7,\n  group: \"Build Airplane\",\n  task: \"Paint wings\",\n  dependencyIds: [5, 6],\n  completedAt: null\n}, {\n  id: 8,\n  group: \"Build Airplane\",\n  task: \"Have a snack\",\n  dependencyIds: [],\n  completedAt: null\n}];\nvar completedPurchasesCounter = 0; //declare counter to keep count of number of completed purchase items\n\nvar completedAirplaneCounter = 0; //declare counter to keep count of number of completed airplane items\n//creating a single todo item class\n\nclass SingleItem extends React.Component {\n  constructor(props) {\n    super(props); //set initial state for todo items\n\n    this.state = {\n      'disabled': false,\n      'completedAt': '',\n      'completed': false,\n      'itemId': this.props.id //set initial state for todo items with no dependency ids\n\n    };\n\n    if (this.props.id !== 1 && this.props.id !== 8) {\n      this.state = {\n        'disabled': true,\n        'completedAt': '',\n        'completed': false,\n        'itemId': this.props.id\n      };\n    }\n\n    this.toggleComplete = this.toggleComplete.bind(this); //binding toggleComplete function\n\n    this.removeDisable = this.removeDisable.bind(this); //binding removeDisable function\n  } //function to toggle the state of complete/checked for the list items\n\n\n  toggleComplete(e) {\n    //e.preventDefault();\n    //e.stopPropagation();\n    //on checkbox isChecked(change), update completedAt with timestamp, else, remove timesamp(set to null)\n    if (this.props.group === 'Purchases') {\n      if (this.state.completed == false) {\n        //if the item is not complete\n        completedPurchasesCounter++; //increment purchase counter\n        //set the state\n\n        this.setState({\n          completedAt: new Date(),\n          completed: true,\n          completedPurchases: completedPurchasesCounter\n        });\n      } else {\n        // if the item is complete\n        if (completedPurchasesCounter !== 0) {\n          //if the counter is not 0(preventing negatives)\n          completedPurchasesCounter--; //decrement purchase counter \n        } //set the state\n\n\n        this.setState(prevState => ({\n          completedAt: '',\n          completed: false,\n          completedPurchases: completedPurchasesCounter\n        }));\n      }\n    } else {\n      if (this.state.completedAt === '') {\n        //if the item is not complete\n        completedAirplaneCounter++; //increment airplane counter\n        //set standard state\n\n        this.state = {\n          completedAt: new Date(),\n          completed: true //set state based on previous states\n\n        };\n        this.setState(prevState => ({\n          completedAt: prevState,\n          completed: prevState,\n          completedPurchases: completedAirplaneCounter\n        }));\n      } else {\n        //if the item is complete\n        if (completedAirplaneCounter !== 0) {\n          //if the counter is not 0(preventing negatives)\n          completedAirplaneCounter--; //decrement airplane counter\n        } //set state based on previous states\n\n\n        this.setState(prevState => ({\n          completedAt: '',\n          completed: false,\n          completedPurchases: completedAirplaneCounter\n        }));\n      }\n    }\n\n    this.removeDisable(); //remove disable attribute from items\n  }\n\n  removeDisable(e) {\n    //looping through all todo list items\n    const ListItems = toDoList.map(todoItem => {\n      var ids = todoItem.dependencyIds; //declaring dependency ID list\n\n      var id = todoItem.id; //declaring item ID\n      //looping through item's dependency id list\n\n      ids.map(item => {\n        let currentItemString = \"itemID\" + id;\n        var currentItem = document.getElementById(currentItemString); //declaring the current item being changed\n\n        let idString = \"itemID\" + item;\n        var depenencyItem = document.getElementById(idString); //declaring the dependency items based on the item being changed\n\n        if (depenencyItem !== null) {\n          //if there is a dependency item\n          if (!depenencyItem.checked === true) {\n            //if dependency item is not checked\n            let spanIdString = \"spanID\" + id;\n            var lockSpan = document.getElementById(spanIdString); //getting the element's span with lock\n\n            lockSpan.classList.add('disabledLock');\n            lockSpan.classList.add('fa');\n            lockSpan.classList.add('fa-lock');\n            let labelIdString = \"labelID\" + id;\n            var labelSpan = document.getElementById(labelIdString); //getting the element's label \n\n            labelSpan.classList.add('disabledLock');\n            labelSpan.classList.remove('doneTextStyle');\n            currentItem.checked = false; //setting the current item to Not checked\n\n            if (this.props.id !== 1 && this.props.id !== 8) {\n              currentItem.setAttribute('disabled', true); //set item to disabled\n\n              if (this.state.completed == true) {\n                //if the item is completed\n                if (this.props.group === 'Purchases') {\n                  //to prevent negative numbers\n                  if (completedPurchasesCounter !== 0) {\n                    completedPurchasesCounter = completedPurchasesCounter--; //decrement counter\n                  } //set state\n\n\n                  this.setState(prevState => ({\n                    disabled: true,\n                    completed: true\n                  }));\n                } else {\n                  //to prevent negative numbers\n                  if (completedAirplaneCounter !== 0) {\n                    completedAirplaneCounter = completedAirplaneCounter--; //decrement counter\n                  } //set state\n\n\n                  this.setState(prevState => ({\n                    disabled: true,\n                    completed: false\n                  }));\n                }\n              }\n            } else if (this.state.itemId === 1 || this.state.itemId === 8) {\n              this.setState(prevState => ({\n                disabled: false,\n                completed: prevState.completed\n              }));\n            }\n          } else {\n            currentItem.removeAttribute('disabled'); //remove disabled attribute\n\n            let spanIdString = \"spanID\" + id;\n            var lockSpan = document.getElementById(spanIdString); //getting the element's span with lock\n\n            lockSpan.classList.remove('disabledLock');\n            lockSpan.classList.remove('fa-lock');\n            let labelIdString = \"labelID\" + id;\n            var labelSpan = document.getElementById(labelIdString); //getting the element's label\n\n            labelSpan.classList.remove('disabledLock'); //set state\n\n            this.setState(prevState => ({\n              disabled: false\n            }));\n          }\n        } else {\n          console.log('no dependency item');\n        }\n      });\n    }); //if the item with this dependency id# is NOT disabled (state is NOT disabled)\n    //then this item is not disabled (state is not disabled)\n  }\n\n  render() {\n    if (this.state.completedAt) {\n      //if item has completedAt state\n      if (this.state.completedAt !== '') {\n        var checkComplete = true; //add checkmark\n\n        var completedTaskClass = 'doneTextStyle'; //add class for done text\n\n        var disabledLock = ''; //add class for lock\n      } else {\n        var checkComplete = false; //add checkmark\n\n        var completedTaskClass = ''; //add class for done text\n\n        var disabledLock = 'fa fa-lock'; //add class for lock\n      }\n    } else {\n      var checkComplete = false; //add checkmark\n\n      var completedTaskClass = ''; //add class for done text\n\n      if (this.state.completed === false && this.state.disabled === false) {\n        var disabledLock = ''; //add class for lock\n      } else {\n        var disabledLock = 'fa fa-lock'; //add class for lock\n      }\n    }\n\n    if (this.state.itemId === 1) {\n      var disabledLock = ''; //add class for lock\n    }\n\n    if (this.state.itemId === 8) {\n      var disabledLock = ''; //add class for lock\n    } //return html markup for list item\n\n\n    return React.createElement(\"div\", {\n      key: this.props.id,\n      className: \"segment \" + this.props.group,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"labelContainer disabledItem \" + completedTaskClass,\n      id: \"labelID\" + this.props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, this.props.task, React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.checkComplete,\n      keyprop: this.props.id,\n      id: \"itemID\" + this.props.id,\n      value: this.props.id,\n      onChange: this.toggleComplete,\n      disabled: this.state.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      id: \"spanID\" + this.props.id,\n      className: \"checkmark checkmark-outline disabledCheckbox disabledLock \" + disabledLock,\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    })));\n  }\n\n} //creating an purchase todolist class\n\n\nclass PurchaseTodoList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    //set state for purchaselist complete counter\n    this.state = {\n      purchaseListCompletedCount: Number\n    };\n    const ListItem = toDoList.map(item => {\n      //loop through todo list, purchase items\n      if (item.group === 'Purchases') {\n        //if group is purchases\n        //return single item component\n        return React.createElement(SingleItem, {\n          key: item.id,\n          id: item.id,\n          group: item.group,\n          task: item.task,\n          dependencyIds: item.dependencyIds,\n          completedAt: item.completedAt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          },\n          __self: this\n        });\n      } else {\n        return;\n      }\n    });\n    return ListItem;\n  }\n\n} //creating an airplane todolist class\n\n\nclass AirplaneTodoList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const ListItem = toDoList.map(item => {\n      //loop through todo list, airplane items\n      if (item.group === 'Build Airplane') {\n        //if group is airplane\n        //return single item component\n        return React.createElement(SingleItem, {\n          key: item.id,\n          id: item.id,\n          group: item.group,\n          task: item.task,\n          dependencyIds: item.dependencyIds,\n          completedAt: item.completedAt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367\n          },\n          __self: this\n        });\n      } else {\n        return;\n      }\n    });\n    return ListItem;\n  }\n\n} //creating an wrap class for todolist\n\n\nclass TotalTaskListWrap extends React.Component {\n  //on click of purchase wrap, show list\n  constructor(props) {\n    super(props);\n    this.state = {\n      hidePurchaseList: true,\n      hideAirplaneList: true,\n      hidePurchaseDetails: false,\n      hideAirplaneDetails: false,\n      hideGroupsButton: true,\n      purchaseListCompletedCount: 0,\n      airplaneListCompletedCount: 0,\n      headingText: 'Things To Do'\n    };\n    this.showPurchaseList = this.showPurchaseList.bind(this); //bind showPurchaseList function\n\n    this.showAirplaneList = this.showAirplaneList.bind(this); //bind showAirplaneList function\n\n    this.showFullList = this.showFullList.bind(this); //bind showFullList function\n  } //function to show the Purchases list\n\n\n  showPurchaseList(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.setState(prevState => ({\n      hidePurchaseList: !prevState,\n      hidePurchaseDetails: prevState,\n      hideAirplaneDetails: prevState,\n      hideGroupsButton: !prevState\n    }));\n    this.updateHeading('purchase'); //set heading\n  } //function to show the Build Airplane list\n\n\n  showAirplaneList(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.setState(prevState => ({\n      hideAirplaneList: !prevState,\n      hidePurchaseDetails: prevState,\n      hideAirplaneDetails: prevState,\n      hideGroupsButton: !prevState\n    }));\n    this.updateHeading('airplane'); //set heading\n  } //function to update the heading text based on the view\n\n\n  updateHeading(heading) {\n    var headingText = '';\n\n    if (heading === 'purchase') {\n      headingText = 'Purchases'; //set heading text\n    } else if (heading === 'airplane') {\n      headingText = 'Build Airplane'; //set heading text\n    } else {}\n\n    this.setState(prevState => ({\n      headingText: headingText\n    }));\n  } //function to show main view, with both list details\n\n\n  showFullList(e) {\n    e.preventDefault();\n    e.stopPropagation(); //setting the state\n\n    this.setState(prevState => ({\n      hidePurchaseList: true,\n      hideAirplaneList: true,\n      hidePurchaseDetails: false,\n      hideAirplaneDetails: false,\n      hideGroupsButton: true,\n      purchaseListCompletedCount: completedPurchasesCounter,\n      airplaneListCompletedCount: completedAirplaneCounter,\n      headingText: 'Things To Do'\n    }));\n  }\n\n  render() {\n    var totalPurchaseCounter = 0; //initializing the total purchase counter\n\n    var totalAirplaneCounter = 0; //initializing the total airplane counter\n\n    const ListItemCount = toDoList.map(item => {\n      if (item.group === 'Purchases') {\n        totalPurchaseCounter++; //increment purchase counter\n      } else {\n        totalAirplaneCounter++; //increment airplane counter\n      }\n    }); //return html markup for the main list view\n\n    return React.createElement(\"div\", {\n      className: \"col-md-7 listwrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container listHeadingWrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"listHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, this.state.headingText), React.createElement(\"p\", {\n      onClick: this.showFullList,\n      className: \"allGroupsBtn\",\n      hidden: this.state.hideGroupsButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, \"All Groups\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"purchaseListWrap \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container segment\",\n      onClick: this.showPurchaseList,\n      hidden: this.state.hidePurchaseDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-caret-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"segmentLabelItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, \"Purchases\"), React.createElement(\"p\", {\n      className: \"segmentLabelItem segmentPitem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\", this.state.purchaseListCompletedCount, \" of \", totalPurchaseCounter, \" tasks complete\")), React.createElement(\"div\", {\n      className: \"purchaseList\",\n      hidden: this.state.hidePurchaseList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, React.createElement(PurchaseTodoList, {\n      completedCount: this.state.completedPurchasesCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"airplaneListWrap \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container segment airplaneSegment\",\n      onClick: this.showAirplaneList,\n      hidden: this.state.hideAirplaneDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-caret-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"segmentLabelItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, \"Build Airplane\"), React.createElement(\"p\", {\n      className: \"segmentLabelItem segmentPitem \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0\", this.state.airplaneListCompletedCount, \" of \", totalAirplaneCounter, \" tasks complete\")), React.createElement(\"div\", {\n      className: \"airplaneList\",\n      hidden: this.state.hideAirplaneList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(AirplaneTodoList, {\n      completedCount: this.state.purchaseListCompletedCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    })))));\n  }\n\n} //Standard App class\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    //return totaltasklistwrap markup\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }, React.createElement(TotalTaskListWrap, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bruce/Desktop/papa-list/papa-takehome/src/App.js"],"names":["React","ReactDOM","toDoList","id","group","task","dependencyIds","completedAt","completedPurchasesCounter","completedAirplaneCounter","SingleItem","Component","constructor","props","state","toggleComplete","bind","removeDisable","e","completed","setState","Date","completedPurchases","prevState","ListItems","map","todoItem","ids","item","currentItemString","currentItem","document","getElementById","idString","depenencyItem","checked","spanIdString","lockSpan","classList","add","labelIdString","labelSpan","remove","setAttribute","disabled","itemId","removeAttribute","console","log","render","checkComplete","completedTaskClass","disabledLock","PurchaseTodoList","purchaseListCompletedCount","Number","ListItem","AirplaneTodoList","TotalTaskListWrap","hidePurchaseList","hideAirplaneList","hidePurchaseDetails","hideAirplaneDetails","hideGroupsButton","airplaneListCompletedCount","headingText","showPurchaseList","showAirplaneList","showFullList","preventDefault","stopPropagation","updateHeading","heading","totalPurchaseCounter","totalAirplaneCounter","ListItemCount","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\n//Include list of todo items\nconst toDoList = [\n  {\n    id: 1,\n    group: \"Purchases\",\n    task: \"Go to the bank\",\n    dependencyIds: [],\n    completedAt: null\n  },\n  {\n    id: 2,\n    group: \"Purchases\",\n    task: \"Buy hammer\",\n    dependencyIds: [1],\n    completedAt: null\n  },\n  {\n    id: 3,\n    group: \"Purchases\",\n    task: \"Buy wood\",\n    dependencyIds: [1],\n    completedAt: null\n  },\n  {\n    id: 4,\n    group: \"Purchases\",\n    task: \"Buy nails\",\n    dependencyIds: [1],\n    completedAt: null\n  },\n  {\n    id: 5,\n    group: \"Purchases\",\n    task: \"Buy paint\",\n    dependencyIds: [1],\n    completedAt: null\n  },\n  {\n    id: 6,\n    group: \"Build Airplane\",\n    task: \"Hammer nails into wood\",\n    dependencyIds: [2, 3, 4],\n    completedAt: null\n  },\n  {\n    id: 7,\n    group: \"Build Airplane\",\n    task: \"Paint wings\",\n    dependencyIds: [5, 6],\n    completedAt: null\n  },\n  {\n    id: 8,\n    group: \"Build Airplane\",\n    task: \"Have a snack\",\n    dependencyIds: [],\n    completedAt: null\n  }\n];\n\n\nvar completedPurchasesCounter = 0; //declare counter to keep count of number of completed purchase items\nvar completedAirplaneCounter = 0; //declare counter to keep count of number of completed airplane items\n\n//creating a single todo item class\nclass SingleItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    //set initial state for todo items\n    this.state = {\n      'disabled': false,\n      'completedAt' : '',\n      'completed' : false,\n      'itemId': this.props.id\n    }\n\n    //set initial state for todo items with no dependency ids\n    if(this.props.id !== 1 && this.props.id !== 8){\n      this.state = {\n        'disabled': true ,\n        'completedAt' : '',\n        'completed' : false,\n        'itemId': this.props.id\n\n      }\n    }\n\n    this.toggleComplete = this.toggleComplete.bind(this); //binding toggleComplete function\n    this.removeDisable = this.removeDisable.bind(this); //binding removeDisable function\n  }\n\n\n  //function to toggle the state of complete/checked for the list items\n  toggleComplete(e){\n    //e.preventDefault();\n    //e.stopPropagation();\n\n    //on checkbox isChecked(change), update completedAt with timestamp, else, remove timesamp(set to null)\n    if(this.props.group === 'Purchases') {\n\n      if (this.state.completed == false){ //if the item is not complete\n\n        completedPurchasesCounter++; //increment purchase counter\n        \n        //set the state\n        this.setState({\n          completedAt: new Date(),\n          completed: true,\n          completedPurchases: completedPurchasesCounter\n        });\n\n      } else { // if the item is complete\n\n        if(completedPurchasesCounter !== 0){ //if the counter is not 0(preventing negatives)\n          completedPurchasesCounter--; //decrement purchase counter \n        }\n\n        //set the state\n        this.setState(prevState => ({\n          completedAt: '',\n          completed: false,\n          completedPurchases: completedPurchasesCounter\n        }));\n\n      }\n\n    } else {\n      if (this.state.completedAt === ''){ //if the item is not complete\n\n        completedAirplaneCounter++; //increment airplane counter\n\n        //set standard state\n        this.state = {\n          completedAt: new Date(),\n          completed: true\n        }\n\n        //set state based on previous states\n        this.setState(prevState => ({\n          completedAt: prevState,\n          completed: prevState,\n          completedPurchases: completedAirplaneCounter\n        }));\n\n      } else { //if the item is complete\n\n        if(completedAirplaneCounter !== 0){ //if the counter is not 0(preventing negatives)\n          completedAirplaneCounter--; //decrement airplane counter\n        }\n\n        //set state based on previous states\n        this.setState(prevState => ({\n          completedAt: '',\n          completed: false,\n          completedPurchases: completedAirplaneCounter\n        }));\n\n      }\n\n    }\n\n    this.removeDisable(); //remove disable attribute from items\n\n  }\n\n  removeDisable(e){\n\n    //looping through all todo list items\n    const ListItems = toDoList.map((todoItem) =>{\n\n      var ids = todoItem.dependencyIds; //declaring dependency ID list\n      var id = todoItem.id; //declaring item ID\n\n      //looping through item's dependency id list\n      ids.map((item) => {\n        let currentItemString = \"itemID\" + id;\n        var currentItem = document.getElementById(currentItemString); //declaring the current item being changed\n\n        let idString = \"itemID\" + item;\n        var depenencyItem = document.getElementById(idString); //declaring the dependency items based on the item being changed\n\n        if(depenencyItem !== null){ //if there is a dependency item\n          if(!depenencyItem.checked === true){ //if dependency item is not checked\n\n            let spanIdString = \"spanID\" + id;\n            var lockSpan = document.getElementById(spanIdString); //getting the element's span with lock\n            lockSpan.classList.add('disabledLock');\n            lockSpan.classList.add('fa');\n            lockSpan.classList.add('fa-lock');\n\n            let labelIdString = \"labelID\" + id;\n            var labelSpan = document.getElementById(labelIdString); //getting the element's label \n            labelSpan.classList.add('disabledLock');\n            labelSpan.classList.remove('doneTextStyle');\n            \n            currentItem.checked = false; //setting the current item to Not checked\n\n            if((this.props.id !== 1) && (this.props.id !== 8)){\n\n              currentItem.setAttribute('disabled', true); //set item to disabled\n\n              if(this.state.completed == true){ //if the item is completed\n                if(this.props.group === 'Purchases'){\n                  //to prevent negative numbers\n                  if(completedPurchasesCounter !== 0){\n                    completedPurchasesCounter = completedPurchasesCounter--; //decrement counter\n                  }\n\n                  //set state\n                  this.setState(prevState => ({\n                    disabled: true,\n                    completed: true,\n                    \n                  }));\n                } else {\n                  //to prevent negative numbers\n                  if(completedAirplaneCounter !== 0){\n                    completedAirplaneCounter = completedAirplaneCounter--; //decrement counter\n                  }\n\n                  //set state\n                  this.setState(prevState => ({\n                    disabled: true,\n                    completed: false,\n                    \n                  }));\n\n                }\n              }\n\n            } else if(this.state.itemId === 1 || this.state.itemId === 8){\n              this.setState(prevState => ({\n                disabled: false,\n                completed: prevState.completed,\n              }));\n\n            }\n\n          } else {\n            currentItem.removeAttribute('disabled'); //remove disabled attribute\n\n            let spanIdString = \"spanID\" + id;\n            var lockSpan = document.getElementById(spanIdString); //getting the element's span with lock\n            lockSpan.classList.remove('disabledLock');\n            lockSpan.classList.remove('fa-lock');\n\n            let labelIdString = \"labelID\" + id;\n            var labelSpan = document.getElementById(labelIdString); //getting the element's label\n            labelSpan.classList.remove('disabledLock');\n\n            //set state\n            this.setState(prevState => ({\n              disabled: false,\n            }));\n\n          }\n        } else {\n          console.log('no dependency item');\n        }\n      \n      });\n\n    });\n\n    //if the item with this dependency id# is NOT disabled (state is NOT disabled)\n    //then this item is not disabled (state is not disabled)\n\n  }\n\n  render() {\n\n    if(this.state.completedAt){ //if item has completedAt state\n      if(this.state.completedAt !== ''){\n        var checkComplete = true; //add checkmark\n        var completedTaskClass = 'doneTextStyle'; //add class for done text\n        var disabledLock = ''; //add class for lock\n        \n      } else {\n        var checkComplete = false; //add checkmark\n        var completedTaskClass = ''; //add class for done text\n        var disabledLock = 'fa fa-lock'; //add class for lock\n      }\n    } else {\n      var checkComplete = false; //add checkmark\n      var completedTaskClass = ''; //add class for done text\n      if(this.state.completed === false && this.state.disabled === false){\n        var disabledLock = ''; //add class for lock\n      } else {\n        var disabledLock = 'fa fa-lock'; //add class for lock\n      }\n    }\n\n    if(this.state.itemId === 1){\n      var disabledLock = ''; //add class for lock\n    }\n\n    if(this.state.itemId === 8){\n      var disabledLock = ''; //add class for lock\n    }\n\n    //return html markup for list item\n    return (\n      <div key={this.props.id} className={\"segment \" + (this.props.group)}>\n        <label className={\"labelContainer disabledItem \" + completedTaskClass } id={\"labelID\" + this.props.id}>{this.props.task}\n          <input type=\"checkbox\" checked={this.state.checkComplete} keyprop={this.props.id} id={\"itemID\" + this.props.id} value={this.props.id} onChange={this.toggleComplete} disabled={this.state.disabled}/>\n          \n          <span id={\"spanID\" + this.props.id} className={\"checkmark checkmark-outline disabledCheckbox disabledLock \" + disabledLock} aria-hidden=\"true\"/>\n        </label>\n      </div>\n    );\n  }\n}\n\n//creating an purchase todolist class\nclass PurchaseTodoList extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render(){\n    //set state for purchaselist complete counter\n    this.state = {\n      purchaseListCompletedCount: Number\n    }\n\n    const ListItem = toDoList.map((item) =>{ //loop through todo list, purchase items\n      \n      if(item.group === 'Purchases'){ //if group is purchases\n\n        //return single item component\n        return (\n          <SingleItem key={item.id} id={item.id} group={item.group} task={item.task} dependencyIds={item.dependencyIds} completedAt={item.completedAt}/>\n          \n        );\n      } else {\n        return;\n      }\n\n    });\n    \n    return ListItem;\n\n  }\n}\n\n//creating an airplane todolist class\nclass AirplaneTodoList extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render(){\n    const ListItem = toDoList.map((item) =>{ //loop through todo list, airplane items\n\n      if(item.group === 'Build Airplane'){ //if group is airplane\n\n        //return single item component\n        return (\n          <SingleItem key={item.id} id={item.id} group={item.group} task={item.task} dependencyIds={item.dependencyIds} completedAt={item.completedAt}/>       \n        );\n      } else {\n        return;\n      }\n\n     });\n   return ListItem;\n\n  }\n}\n\n//creating an wrap class for todolist\nclass TotalTaskListWrap extends React.Component {\n\n  //on click of purchase wrap, show list\n  constructor(props) {\n    super(props);\n    this.state = {\n      hidePurchaseList: true,\n      hideAirplaneList: true,\n      hidePurchaseDetails: false,\n      hideAirplaneDetails: false,\n      hideGroupsButton: true,\n      purchaseListCompletedCount: 0,\n      airplaneListCompletedCount: 0,\n      headingText: 'Things To Do'\n    } \n\n    this.showPurchaseList = this.showPurchaseList.bind(this); //bind showPurchaseList function\n    this.showAirplaneList = this.showAirplaneList.bind(this); //bind showAirplaneList function\n    this.showFullList = this.showFullList.bind(this); //bind showFullList function\n\n  }\n\n  //function to show the Purchases list\n  showPurchaseList(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.setState(prevState => ({\n      hidePurchaseList: !prevState,\n      hidePurchaseDetails: prevState,\n      hideAirplaneDetails: prevState,\n      hideGroupsButton: !prevState\n    }));\n\n    this.updateHeading('purchase'); //set heading\n  }\n\n  //function to show the Build Airplane list\n  showAirplaneList(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.setState(prevState => ({\n      hideAirplaneList: !prevState,\n      hidePurchaseDetails: prevState,\n      hideAirplaneDetails: prevState,\n      hideGroupsButton: !prevState\n    }));\n\n    this.updateHeading('airplane'); //set heading\n  }\n\n  //function to update the heading text based on the view\n  updateHeading(heading){\n    var headingText = '';\n\n    if(heading === 'purchase'){\n      headingText = 'Purchases'; //set heading text\n      \n    } else if(heading === 'airplane'){\n      headingText = 'Build Airplane'; //set heading text\n      \n    } else {\n\n    }\n\n    this.setState(prevState => ({\n      headingText: headingText\n    }));\n  }\n\n  //function to show main view, with both list details\n  showFullList(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    //setting the state\n    this.setState(prevState => ({\n      hidePurchaseList: true,\n      hideAirplaneList: true,\n      hidePurchaseDetails: false,\n      hideAirplaneDetails: false,\n      hideGroupsButton: true,\n      purchaseListCompletedCount: completedPurchasesCounter,\n      airplaneListCompletedCount: completedAirplaneCounter,\n      headingText: 'Things To Do'\n    }));\n\n  }\n\n  render() {\n    var totalPurchaseCounter = 0; //initializing the total purchase counter\n    var totalAirplaneCounter = 0; //initializing the total airplane counter\n    const ListItemCount = toDoList.map((item) =>{\n\n      if(item.group === 'Purchases'){\n        totalPurchaseCounter++; //increment purchase counter\n        \n      } else {\n        totalAirplaneCounter++; //increment airplane counter\n      }\n\n    });\n\n    //return html markup for the main list view\n    return (\n      <div className=\"col-md-7 listwrap\">\n        <div className=\"container listHeadingWrap\">\n          <h4 className=\"listHeader\">{this.state.headingText}</h4>\n          <p onClick={this.showFullList} className=\"allGroupsBtn\" hidden={this.state.hideGroupsButton}>All Groups</p>\n        </div>\n        <div>\n          <div className=\"purchaseListWrap \">   \n            <div className=\"container segment\" onClick={this.showPurchaseList} hidden={this.state.hidePurchaseDetails}>\n              <span className=\"fa fa-caret-right\"></span>     \n              <label className=\"segmentLabelItem\">Purchases</label>\n              <p className=\"segmentLabelItem segmentPitem\">&nbsp;&nbsp;&nbsp;{this.state.purchaseListCompletedCount} of {totalPurchaseCounter} tasks complete</p>\n            </div>\n            <div className=\"purchaseList\" hidden= {this.state.hidePurchaseList}>\n              <PurchaseTodoList completedCount={this.state.completedPurchasesCounter} />\n            </div>\n          </div>\n\n          <div className=\"airplaneListWrap \">\n            <div className=\"container segment airplaneSegment\" onClick={this.showAirplaneList} hidden={this.state.hideAirplaneDetails}> \n              <span className=\"fa fa-caret-right\"></span>   \n              <label className=\"segmentLabelItem\">Build Airplane</label>\n              <p className=\"segmentLabelItem segmentPitem \">&nbsp;&nbsp;&nbsp;{this.state.airplaneListCompletedCount} of {totalAirplaneCounter} tasks complete</p>\n              \n            </div>\n            \n            <div className=\"airplaneList\" hidden= {this.state.hideAirplaneList}>\n              <AirplaneTodoList completedCount={this.state.purchaseListCompletedCount} />\n            </div>\n          </div>\n        </div>\n      </div>      \n    );\n  }\n}\n\n//Standard App class\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n    //return totaltasklistwrap markup\n    return (\n\n      <div className=\"App\">\n            \n        <TotalTaskListWrap />\n\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}